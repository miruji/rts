/* /prelude

  Несколько моментов о коде:
  
  - match быстрее if; matches! быстрее простой проверки if
    при множествах значениях на одну проверку; match охватывает
    варианты ветвления более подробно
    
  - .len() == 0 быстрее is_empty()
  
  - Использование ссылок на данные быстрее клонирования,
    но не означает, что всегда нужно использовать ссылки;
    
  - Использование Arc+RwLock позволяет нескольким потокам 
    управлять чем-то без клонирования его самого;
    
  - На RwLock следует вовремя использовать drop(),
    не создавать переменные на них, а также использовать в
    замкнутых временных блоках.
    
  - Следует избегать флагов mut;
  
  - Следует указывать типы везде, где это возможно;
  
  - Объявление данных следует выносить за циклы.
  
  - Следует использовать временные блоки, чтобы оставались 
    только необходимые данные.
*/

#[macro_use]
extern crate lazy_static;

// =================================================================================================

mod logger;
mod tokenizer;
mod parser;
mod packageApi;

pub use logger::*;
pub use tokenizer::*;
pub use parser::*;
pub use packageApi::*;

// =================================================================================================

/// run file path
pub static mut _filePath: String = String::new();
/// Вывод дебага>
pub static mut _debugMode: bool = false;

/// // arhuments count
pub static mut _argc: usize       = 0;
/// // arguments vector
pub static mut _argv: Vec<String> = Vec::new();

/// Значение которое вернёт программа при завершении
pub static mut _exitCode: i32 = 0;
/// // Завершилась ли программа?
pub static mut _exit: bool = false;
/// version
pub static _version: &str = "231206.0";